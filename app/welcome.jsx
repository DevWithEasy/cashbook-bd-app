import * as Crypto from "expo-crypto";
import * as FileSystem from "expo-file-system";
import { router } from "expo-router";
import { useState } from "react";
import {
  ActivityIndicator,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from "react-native";
import Toast from "react-native-toast-message";

const BUSINESS_FILE = FileSystem.documentDirectory + "business.json";
const BOOK_FILE = FileSystem.documentDirectory + "books.json";
const CATEGORIES_FILE = FileSystem.documentDirectory + "categories.json";
const APP_SETTINGS_FILE = FileSystem.documentDirectory + "settings.json";

export default function WellCome() {
  const [loading, setLoading] = useState(false);

  const initializeDatabase = async () => {
    setLoading(true);

    try {
      const businesses = [
        {
          id: Crypto.randomUUID(),
          name: "‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ",
          category: "‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø",
          type: "‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø",
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString(),
        },
      ];

      const books = [
        {
          id: Crypto.randomUUID(),
          business_id: businesses[0].id,
          name: "‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶¨‡¶á",
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString(),
        },
      ];
      
      const categories = [
        { id: Crypto.randomUUID(), name: "‡¶¨‡ßá‡¶§‡¶®", type: "income", is_default: true },
        { id: Crypto.randomUUID(), name: "‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶Ø‡¶º", type: "income", is_default: true },
        { id: Crypto.randomUUID(), name: "‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶Ü‡¶Ø‡¶º", type: "income", is_default: true },
        { id: Crypto.randomUUID(), name: "‡¶ï‡¶æ‡¶Å‡¶ö‡¶æ‡¶Æ‡¶æ‡¶≤", type: "expense", is_default: true },
        { id: Crypto.randomUUID(), name: "‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡ßÅ‡ßé ‡¶¨‡¶ø‡¶≤", type: "expense", is_default: true },
        { id: Crypto.randomUUID(), name: "‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶ñ‡¶∞‡¶ö", type: "expense", is_default: true },
        { id: Crypto.randomUUID(), name: "‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø", type: "expense", is_default: true }
      ];

      await FileSystem.writeAsStringAsync(
        BUSINESS_FILE,
        JSON.stringify(businesses)
      );
      await FileSystem.writeAsStringAsync(BOOK_FILE, JSON.stringify(books));
      await FileSystem.writeAsStringAsync(
        CATEGORIES_FILE,
        JSON.stringify(categories)
      );
      await FileSystem.writeAsStringAsync(
        APP_SETTINGS_FILE,
        JSON.stringify({
          selected_business: businesses[0].id,
        })
      );

      router.replace("/main");
    } catch (error) {
      console.error("‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø:", error);
      Toast.show({
        type: "error",
        text1: "‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
      });
    } finally {
      setLoading(false);
    }
  };

  return (
    <View style={styles.container}>
      <View style={styles.content}>
        <Text style={styles.title}>‡¶ï‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßÅ‡¶ï BD ‡¶è ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ</Text>
        <Text style={styles.subtitle}>‡¶∏‡¶π‡¶ú‡ßá‡¶á ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶• ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®</Text>

        <View style={styles.featuresContainer}>
          {/* New Feature: Business Account */}
          <View style={styles.featureItem}>
            <Text style={styles.featureIcon}>üè¢</Text>
            <Text style={styles.featureText}>‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ñ‡ßÅ‡¶≤‡ßÅ‡¶®</Text>
          </View>

          <View style={styles.featureItem}>
            <Text style={styles.featureIcon}>üìö</Text>
            <Text style={styles.featureText}>‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï ‡¶ñ‡¶æ‡¶§‡¶æ</Text>
          </View>

          <View style={styles.featureItem}>
            <Text style={styles.featureIcon}>üóÇÔ∏è</Text>
            <Text style={styles.featureText}>‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø</Text>
          </View>

          <View style={styles.featureItem}>
            <Text style={styles.featureIcon}>üí∞</Text>
            <Text style={styles.featureText}>‡¶Ü‡¶Ø‡¶º/‡¶ñ‡¶∞‡¶ö ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®</Text>
          </View>

          <View style={styles.featureItem}>
            <Text style={styles.featureIcon}>üßæ</Text>
            <Text style={styles.featureText}>
              ‡¶≤‡ßá‡¶®‡¶¶‡ßá‡¶®‡ßá‡¶∞ PDF ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®
            </Text>
          </View>

          {/* New Feature: Data Backup & Restore */}
          <View style={styles.featureItem}>
            <Text style={styles.featureIcon}>üíæ</Text>
            <Text style={styles.featureText}>‡¶°‡¶æ‡¶ü‡¶æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶Ü‡¶™ ‡¶ì ‡¶∞‡¶ø‡¶∏‡ßç‡¶ü‡ßã‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®</Text>
          </View>
        </View>
      </View>

      <TouchableOpacity
        style={styles.button}
        onPress={initializeDatabase}
        disabled={loading}
      >
        {loading ? (
          <ActivityIndicator color="#fff" />
        ) : (
          <Text style={styles.buttonText}>‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®</Text>
        )}
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#f8f9fa",
    padding: 20,
    justifyContent: "space-between",
  },
  content: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
  title: {
    fontSize: 28,
    fontFamily: "bangla_bold",
    color: "#2c3e50",
    marginBottom: 10,
    textAlign: "center",
  },
  subtitle: {
    fontSize: 16,
    color: "#7f8c8d",
    marginBottom: 40,
    textAlign: "center",
    fontFamily: "bangla_semibold",
  },
  featuresContainer: {
    width: "100%",
    marginBottom: 40,
  },
  featureItem: {
    flexDirection: "row",
    alignItems: "center",
    marginVertical: 12,
    paddingHorizontal: 20,
  },
  featureIcon: {
    fontSize: 20,
    marginRight: 15,
    width: 40,
    textAlign: "center",
  },
  featureText: {
    fontSize: 15,
    color: "#34495e",
    fontFamily: "bangla_medium",
    flex: 1,
  },
  button: {
    backgroundColor: "#3b82f6",
    padding: 16,
    borderRadius: 12,
    alignItems: "center",
    marginBottom: 30,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  buttonText: {
    color: "white",
    fontSize: 17,
    fontFamily: "bangla_semibold",
  },
});